//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.33440
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
public class IEnemy : ITangible
{

		private Vision vision;

		private bool passive;

		private Animator animator;

		public Transform heroPosition;

		public IEnemy (int hp, int damage) : base (50, 10)
		{
		}

		public override void Start ()
		{
				this.passive = false;
				this.vision = this.GetComponentInChildren<Vision> ();
				this.animator = this.GetComponent<Animator> ();
		}

		public override void Update ()
		{
				if (this.vision.isAggro () && !this.passive) {
						this.aggro (true);
				} else if (this.vision.canReach () && !this.passive) {
						this.attack (true);
				} else {
						this.aggro (false);
						this.attack (false);
				}

				this.followHero ();

		}

		private void aggro (bool value)
		{
				this.animator.SetBool (AnimatorParameterEnum.ENEMY_AGGRO.name, value);
		}

		private void attack (bool value)
		{
				this.animator.SetBool (AnimatorParameterEnum.ENEMY_CANREACH.name, value);	
		}

		private void followHero ()
		{
				if (AnimationUtils.animatorStateEquals (this.animator, AnimationEnum.ENEMY_RUN)) {
						float vector = 0;
						if (this.heroPosition.position.x > this.transform.position.x) {
								vector = 0.02f;
						} else if (this.heroPosition.position.x < this.transform.position.x) {
								vector = -0.02f;
						}
						this.transform.position += new Vector3 (vector, 0, 0);
				}
		}

}

